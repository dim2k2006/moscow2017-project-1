!function(){if(!("modules"in app&&"modal"in app.modules)){var e=function(){var e=this;e.html="",e.body="",e.container=document.querySelector(".modal"),e.openButton=document.querySelector(".modal_trigger"),e.closeButton=document.querySelector(".modal_close"),e.setupListener=function(){e.body.addEventListener("click",e.router)},e.router=function(t){var n=t.target;n.classList.contains("modal_trigger")?(t.preventDefault(),e.open(t.target)):n.classList.contains("modal_close")&&(t.preventDefault(),e.close(t.target))},e.open=function(t){var n=t.getAttribute("href"),a=document.querySelector(n),o=t.dataset.photo,l=t.dataset.title,i=t.dataset.description;a.querySelector(".authorInfo__preview img").src=o,a.querySelector(".authorInfo__title").innerHTML=l,a.querySelector(".authorInfo__text p").innerHTML=i,e.html.classList.add("modal_state_open"),a.classList.add("modal_state_open")},e.close=function(t){var n=t.closest(".modal");n.classList.remove("modal_state_open"),e.html.classList.remove("modal_state_open")},e.importDefaults=function(){e.html=app.modules.main.html,e.body=app.modules.main.body},e.init=function(){e.container&&(e.importDefaults(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.modal=new e}}();var initApp=function(){if(!("modules"in app&&"main"in app.modules)){var e=function(){var e=this;e.html=document.querySelector("html"),e.body=document.querySelector("body"),e.modules=app.modules,e.library=new Library,e.initLibrary=function(){e.library.init()},e.initModules=function(){for(var t in e.modules)e.modules.hasOwnProperty(t)&&"undefined"!=typeof e.modules[t].init&&"main"!==t&&"library"!==t&&e.modules[t].init()},e.init=function(){e.initLibrary(),e.initModules()}};"modules"in app||(app.modules={}),app.modules.main=new e,app.modules.main.init()}};window.addEventListener("load",initApp),function(){if(!("modules"in app&&"schedule"in app.modules)){var e=function(){var e=this;e.body="",e.getSchedule="",e.getPlace="",e.getSchool="",e.getAuthor="",e.expand="",e.container=document.querySelector(".schedule"),e.content=document.querySelector(".scheduleList__content"),e.template=document.querySelector("#scheduleItem-template").innerHTML,e.monthNames=["январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь"],e.dataList="",e.setupListener=function(){},e.getData=function(){var t="",n="",a="";e.getSchedule(t,n,a).then(function(t){e.render(t)})},e.render=function(t){var n=document.createElement("ul");n.classList.add("scheduleList__list"),t.lectures.forEach(function(a){var o=document.createElement("li");o.classList.add("scheduleList__item"),o.innerHTML=e.template;var l=new Date(a.date),i=l.getDate(),r=e.monthNames[l.getMonth()],s=[],u=[];a.school.forEach(function(n){var a=e.expand([n],{title:"schools",data:t.schools},"title"),o=e.expand([n],{title:"schools",data:t.schools},"id");s.push('<span class="scheduleItem__school__item scheduleItem__school__item_'+o+'">'+a+"</span>")}),a.author.forEach(function(n){var a=e.expand([n],{title:"authors",data:t.authors},"title"),o=e.expand([n],{title:"authors",data:t.authors},"photo"),l=e.expand([n],{title:"authors",data:t.authors},"description");u.push('<a class="scheduleItem__author__link modal_trigger" href="#author" title="Посмотреть дополнительную информацию" data-photo="'+o+'" data-title="'+a+'" data-description="'+l+'">'+a+"</a>")}),o.querySelector(".scheduleItem__day").innerHTML=i,o.querySelector(".scheduleItem__month").innerHTML=r,o.querySelector(".scheduleItem__time").innerHTML=a.time,o.querySelector(".scheduleItem__title").innerHTML=a.title,o.querySelector(".scheduleItem__school").innerHTML=s.join(""),o.querySelector(".scheduleItem__author").innerHTML+=u.join(", "),o.querySelector(".scheduleItem__audience").innerHTML+=e.expand([a.place],{title:"places",data:t.places},"title"),o.querySelector(".scheduleItem__place__link").innerHTML=e.expand([a.place],{title:"places",data:t.places},"address"),o.querySelector(".scheduleItem__place__link").href=e.expand([a.place],{title:"places",data:t.places},"link"),n.appendChild(o)}),e.content.innerHTML="",e.content.appendChild(n)},e.importDefaults=function(){e.body=app.modules.main.body,e.getSchedule=app.modules.main.library.getSchedule,e.expand=app.modules.main.library.expand},e.init=function(){e.container&&(e.importDefaults(),e.getData(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.schedule=new e}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,

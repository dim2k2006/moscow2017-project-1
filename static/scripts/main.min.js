!function(){if(!("modules"in app&&"formSelectMultiple"in app.modules)){var e=function(){var e=this;e.body="",e.container=document.querySelector(".formSelectMultiple"),e.content=document.querySelector(".formSelectMultiple__content"),e.footer=document.querySelector(".formSelectMultiple__footer"),e.setupListener=function(){e.content.addEventListener("change",e.handleChange),e.footer.addEventListener("click",e.handleClick)},e.handleChange=function(){var t=this.closest(".formSelectMultiple"),n=t.querySelector(".formSelectMultiple__select"),l=n.value,o=t.dataset.list?JSON.parse(t.dataset.list):[],a=[].slice.call(n.querySelectorAll("option")),i=[],r=[];t.classList.contains("formSelectMultiple_state_inited")||([].slice.call(n.querySelectorAll("option")).forEach(function(e){var t=e.value,n=e.innerHTML;t&&n&&o.push({value:t,text:n})}),t.dataset.list=JSON.stringify(o),t.classList.add("formSelectMultiple_state_inited")),a.forEach(function(e){var t=e.value,n=e.innerHTML;t&&n&&i.push({value:t,text:n})}),i=i.filter(function(e){return e.value!==l}),i.forEach(function(e){o.forEach(function(t,n){t.value===e.value&&o.splice(n,1)})}),r=o,e.render(t,i,r)},e.handleClick=function(t){t.preventDefault();var n=this.closest(".formSelectMultiple"),l=t.target,o=l.getAttribute("href"),a=n.dataset.list?JSON.parse(n.dataset.list):[],i=[].slice.call(n.querySelectorAll("a")),r=[],u=[];u=i.map(function(e){var t=e.getAttribute("href"),n=e.innerHTML;return{value:t,text:n}}).filter(function(e){return e.value!==o}),u.forEach(function(e){a.forEach(function(t,n){t.value===e.value&&a.splice(n,1)})}),r=a,e.render(n,r,u)},e.render=function(e,t,n){var l=e.querySelector(".formSelectMultiple__select"),o=e.querySelector(".formSelectMultiple__list"),a='<option value=""></option>',i="";t.length>0&&t.forEach(function(e){a+='<option value="'+e.value+'">'+e.text+"</option>"}),n.length>0&&n.forEach(function(e){i+='<li class="formSelectMultiple__item"><a href="'+e.value+'" class="formSelectMultiple__link">'+e.text+"</a></li>"}),l&&(l.innerHTML=a),o&&(o.innerHTML=i)},e.importDefaults=function(){e.body=app.modules.main.body},e.init=function(){e.container&&(e.importDefaults(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.formSelectMultiple=new e}}();var initApp=function(){if(!("modules"in app&&"main"in app.modules)){var e=function(){var e=this;e.html=document.querySelector("html"),e.body=document.querySelector("body"),e.modules=app.modules,e.library=new Library,e.initLibrary=function(){e.library.init()},e.initModules=function(){for(var t in e.modules)e.modules.hasOwnProperty(t)&&"undefined"!=typeof e.modules[t].init&&"main"!==t&&"library"!==t&&e.modules[t].init()},e.init=function(){e.initLibrary(),e.initModules()}};"modules"in app||(app.modules={}),app.modules.main=new e,app.modules.main.init()}};window.addEventListener("load",initApp),function(){if(!("modules"in app&&"modal"in app.modules)){var e=function(){var e=this;e.html="",e.body="",e.container=document.querySelector(".modal"),e.openButton=document.querySelector(".modal_trigger"),e.closeButton=document.querySelector(".modal_close"),e.setupListener=function(){e.body.addEventListener("click",e.router)},e.router=function(t){var n=t.target;n.classList.contains("modal_trigger")?(t.preventDefault(),e.open(t.target)):n.classList.contains("modal_close")&&(t.preventDefault(),e.close(t.target))},e.open=function(t){var n=t.getAttribute("href"),l=document.querySelector(n),o=t.dataset.photo,a=t.dataset.title,i=t.dataset.description;l.querySelector(".authorInfo__preview img").src=o,l.querySelector(".authorInfo__title").innerHTML=a,l.querySelector(".authorInfo__text p").innerHTML=i,e.html.classList.add("modal_state_open"),l.classList.add("modal_state_open")},e.close=function(t){var n=t.closest(".modal");n.classList.remove("modal_state_open"),e.html.classList.remove("modal_state_open")},e.importDefaults=function(){e.html=app.modules.main.html,e.body=app.modules.main.body},e.init=function(){e.container&&(e.importDefaults(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.modal=new e}}(),function(){if(!("modules"in app&&"schedule"in app.modules)){var e=function(){var e=this;e.body="",e.getSchedule="",e.getPlace="",e.getSchool="",e.getAuthor="",e.expand="",e.container=document.querySelector(".schedule"),e.content=document.querySelector(".scheduleList__content"),e.template=document.querySelector("#scheduleItem-template").innerHTML,e.monthNames=["январь","февраль","март","апрель","май","июнь","июль","август","сентябрь","октябрь","ноябрь","декабрь"],e.dataList="",e.setupListener=function(){},e.getData=function(){var t="",n="",l="";e.getSchedule(t,n,l).then(function(t){e.render(t)})},e.render=function(t){var n=document.createElement("ul");n.classList.add("scheduleList__list"),t.lectures.forEach(function(l){var o=document.createElement("li");o.classList.add("scheduleList__item"),o.innerHTML=e.template;var a=new Date(l.date),i=a.getDate(),r=e.monthNames[a.getMonth()],u=[],c=[];l.school.forEach(function(n){var l=e.expand([n],{title:"schools",data:t.schools},"title"),o=e.expand([n],{title:"schools",data:t.schools},"id");u.push('<span class="scheduleItem__school__item scheduleItem__school__item_'+o+'">'+l+"</span>")}),l.author.forEach(function(n){var l=e.expand([n],{title:"authors",data:t.authors},"title"),o=e.expand([n],{title:"authors",data:t.authors},"photo"),a=e.expand([n],{title:"authors",data:t.authors},"description");c.push('<a class="scheduleItem__author__link modal_trigger" href="#author" title="Посмотреть дополнительную информацию" data-photo="'+o+'" data-title="'+l+'" data-description="'+a+'">'+l+"</a>")}),l.isOver&&o.querySelector(".scheduleItem").classList.add("scheduleItem_state_inactive"),o.querySelector(".scheduleItem__day").innerHTML=i,o.querySelector(".scheduleItem__month").innerHTML=r,o.querySelector(".scheduleItem__time").innerHTML=l.time,o.querySelector(".scheduleItem__title").innerHTML=l.title,o.querySelector(".scheduleItem__school").innerHTML=u.join(""),o.querySelector(".scheduleItem__author").innerHTML+=c.join(", "),o.querySelector(".scheduleItem__audience").innerHTML+=e.expand([l.place],{title:"places",data:t.places},"title"),o.querySelector(".scheduleItem__place__link").innerHTML=e.expand([l.place],{title:"places",data:t.places},"address"),o.querySelector(".scheduleItem__place__link").href=e.expand([l.place],{title:"places",data:t.places},"link"),n.appendChild(o)}),e.content.innerHTML="",e.content.appendChild(n)},e.importDefaults=function(){e.body=app.modules.main.body,e.getSchedule=app.modules.main.library.getSchedule,e.expand=app.modules.main.library.expand},e.init=function(){e.container&&(e.importDefaults(),e.getData(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.schedule=new e}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
